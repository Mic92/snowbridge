pub use vault::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod vault {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"CannotSendFunds\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InsufficientBalance\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"ZeroAmount\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"ParaID\",\"name\":\"sovereign\",\"type\":\"uint32\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Deposited\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleAdminChanged\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleGranted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleRevoked\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"ParaID\",\"name\":\"sovereign\",\"type\":\"uint32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\",\"components\":[],\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Withdrawn\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"WITHDRAW_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"ParaID\",\"name\":\"sovereign\",\"type\":\"uint32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"ParaID\",\"name\":\"sovereign\",\"type\":\"uint32\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"deposit\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"grantRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"renounceRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"revokeRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"ParaID\",\"name\":\"sovereign\",\"type\":\"uint32\",\"components\":[]},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"receive\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static VAULT_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        41,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        16,
        148,
        131,
        57,
        129,
        81,
        145,
        82,
        51,
        97,
        0,
        102,
        86,
        91,
        97,
        0,
        97,
        127,
        93,
        142,
        18,
        195,
        145,
        66,
        255,
        150,
        215,
        157,
        4,
        209,
        93,
        27,
        161,
        38,
        158,
        79,
        229,
        123,
        185,
        210,
        111,
        67,
        82,
        54,
        40,
        179,
        75,
        161,
        8,
        236,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        16,
        148,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        1,
        5,
        86,
        91,
        97,
        1,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        97,
        1,
        1,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        0,
        192,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        128,
        130,
        32,
        96,
        1,
        1,
        128,
        84,
        144,
        132,
        144,
        85,
        144,
        81,
        144,
        145,
        131,
        145,
        131,
        145,
        134,
        145,
        127,
        189,
        121,
        184,
        111,
        254,
        10,
        184,
        232,
        119,
        97,
        81,
        81,
        66,
        23,
        205,
        124,
        172,
        213,
        44,
        144,
        159,
        102,
        71,
        92,
        58,
        244,
        78,
        18,
        159,
        11,
        0,
        255,
        145,
        144,
        164,
        80,
        80,
        80,
        86,
        91,
        97,
        15,
        53,
        128,
        97,
        1,
        95,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        0,
        203,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        162,
        23,
        253,
        223,
        17,
        97,
        0,
        116,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        17,
        97,
        0,
        78,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        2,
        190,
        87,
        128,
        99,
        224,
        32,
        35,
        161,
        20,
        97,
        2,
        222,
        87,
        128,
        99,
        228,
        232,
        12,
        166,
        20,
        97,
        3,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        2,
        118,
        87,
        128,
        99,
        180,
        218,
        0,
        194,
        20,
        97,
        2,
        139,
        87,
        128,
        99,
        183,
        232,
        188,
        153,
        20,
        97,
        2,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        17,
        97,
        0,
        165,
        87,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        1,
        209,
        87,
        128,
        99,
        117,
        178,
        56,
        252,
        20,
        97,
        1,
        241,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        2,
        37,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        60,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        113,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        1,
        175,
        87,
        96,
        0,
        128,
        253,
        91,
        54,
        97,
        1,
        55,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        25,
        96,
        36,
        130,
        1,
        82,
        127,
        77,
        117,
        115,
        116,
        32,
        117,
        115,
        101,
        32,
        100,
        101,
        112,
        111,
        115,
        105,
        116,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        92,
        97,
        1,
        87,
        54,
        96,
        4,
        97,
        11,
        234,
        86,
        91,
        97,
        3,
        63,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        1,
        125,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        97,
        1,
        140,
        54,
        96,
        4,
        97,
        12,
        44,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        104,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        187,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        1,
        202,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        3,
        216,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        221,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        1,
        236,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        4,
        2,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        253,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        127,
        164,
        152,
        7,
        32,
        92,
        228,
        211,
        85,
        9,
        46,
        245,
        168,
        161,
        143,
        86,
        232,
        145,
        60,
        244,
        162,
        1,
        251,
        226,
        135,
        130,
        91,
        9,
        86,
        147,
        194,
        23,
        117,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        49,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        92,
        97,
        2,
        64,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        96,
        0,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        151,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        2,
        166,
        54,
        96,
        4,
        97,
        12,
        176,
        86,
        91,
        97,
        4,
        181,
        86,
        91,
        97,
        1,
        207,
        97,
        2,
        185,
        54,
        96,
        4,
        97,
        12,
        239,
        86,
        91,
        97,
        6,
        136,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        202,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        2,
        217,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        6,
        240,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        234,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        127,
        93,
        142,
        18,
        195,
        145,
        66,
        255,
        150,
        215,
        157,
        4,
        209,
        93,
        27,
        161,
        38,
        158,
        79,
        229,
        123,
        185,
        210,
        111,
        67,
        82,
        54,
        40,
        179,
        75,
        161,
        8,
        236,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        97,
        3,
        45,
        54,
        96,
        4,
        97,
        12,
        239,
        86,
        91,
        96,
        1,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        96,
        0,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        22,
        127,
        121,
        101,
        219,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        20,
        128,
        97,
        3,
        210,
        87,
        80,
        127,
        1,
        255,
        201,
        167,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        22,
        20,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        3,
        243,
        129,
        97,
        7,
        21,
        86,
        91,
        97,
        3,
        253,
        131,
        131,
        97,
        7,
        34,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        51,
        20,
        97,
        4,
        167,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        127,
        32,
        114,
        111,
        108,
        101,
        115,
        32,
        102,
        111,
        114,
        32,
        115,
        101,
        108,
        102,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        1,
        46,
        86,
        91,
        97,
        4,
        177,
        130,
        130,
        97,
        8,
        18,
        86,
        91,
        80,
        80,
        86,
        91,
        127,
        93,
        142,
        18,
        195,
        145,
        66,
        255,
        150,
        215,
        157,
        4,
        209,
        93,
        27,
        161,
        38,
        158,
        79,
        229,
        123,
        185,
        210,
        111,
        67,
        82,
        54,
        40,
        179,
        75,
        161,
        8,
        236,
        97,
        4,
        223,
        129,
        97,
        7,
        21,
        86,
        91,
        129,
        96,
        0,
        3,
        97,
        5,
        25,
        87,
        96,
        64,
        81,
        127,
        31,
        42,
        32,
        5,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        99,
        255,
        255,
        255,
        255,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        130,
        17,
        21,
        97,
        5,
        104,
        87,
        96,
        64,
        81,
        127,
        244,
        214,
        120,
        184,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        99,
        255,
        255,
        255,
        255,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        132,
        146,
        144,
        97,
        5,
        141,
        144,
        132,
        144,
        97,
        13,
        57,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        0,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        144,
        132,
        144,
        131,
        129,
        129,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        5,
        234,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        5,
        239,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        80,
        144,
        80,
        128,
        97,
        6,
        42,
        87,
        96,
        64,
        81,
        127,
        211,
        115,
        144,
        20,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        128,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        99,
        255,
        255,
        255,
        255,
        135,
        22,
        145,
        127,
        100,
        107,
        73,
        58,
        15,
        94,
        225,
        244,
        93,
        81,
        68,
        190,
        106,
        129,
        201,
        26,
        194,
        161,
        249,
        142,
        203,
        255,
        62,
        84,
        137,
        200,
        217,
        164,
        254,
        150,
        232,
        216,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        52,
        146,
        144,
        97,
        6,
        173,
        144,
        132,
        144,
        97,
        13,
        76,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        52,
        129,
        82,
        99,
        255,
        255,
        255,
        255,
        130,
        22,
        144,
        127,
        201,
        101,
        87,
        90,
        0,
        85,
        62,
        9,
        76,
        167,
        197,
        209,
        79,
        2,
        225,
        7,
        194,
        88,
        221,
        160,
        104,
        103,
        203,
        249,
        224,
        230,
        159,
        128,
        231,
        27,
        188,
        193,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        7,
        11,
        129,
        97,
        7,
        21,
        86,
        91,
        97,
        3,
        253,
        131,
        131,
        97,
        8,
        18,
        86,
        91,
        97,
        7,
        31,
        129,
        51,
        97,
        8,
        201,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        97,
        4,
        177,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        7,
        180,
        51,
        144,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        129,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        21,
        97,
        4,
        177,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        97,
        4,
        177,
        87,
        97,
        9,
        7,
        129,
        97,
        9,
        129,
        86,
        91,
        97,
        9,
        18,
        131,
        96,
        32,
        97,
        9,
        160,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        9,
        35,
        146,
        145,
        144,
        97,
        13,
        131,
        86,
        91,
        96,
        64,
        128,
        81,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        97,
        1,
        46,
        145,
        96,
        4,
        1,
        97,
        14,
        4,
        86,
        91,
        96,
        96,
        97,
        3,
        210,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        9,
        175,
        131,
        96,
        2,
        97,
        14,
        85,
        86,
        91,
        97,
        9,
        186,
        144,
        96,
        2,
        97,
        13,
        76,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        9,
        210,
        87,
        97,
        9,
        210,
        97,
        14,
        108,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        9,
        252,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        127,
        48,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        10,
        51,
        87,
        97,
        10,
        51,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        127,
        120,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        10,
        150,
        87,
        97,
        10,
        150,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        10,
        210,
        132,
        96,
        2,
        97,
        14,
        85,
        86,
        91,
        97,
        10,
        221,
        144,
        96,
        1,
        97,
        13,
        76,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        11,
        122,
        87,
        127,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        97,
        98,
        99,
        100,
        101,
        102,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        11,
        30,
        87,
        97,
        11,
        30,
        97,
        14,
        155,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        11,
        52,
        87,
        97,
        11,
        52,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        11,
        115,
        129,
        97,
        14,
        202,
        86,
        91,
        144,
        80,
        97,
        10,
        224,
        86,
        91,
        80,
        131,
        21,
        97,
        11,
        227,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        46,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        11,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        129,
        20,
        97,
        11,
        227,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        62,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        7,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        122,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        140,
        129,
        97,
        12,
        69,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        128,
        53,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        12,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        12,
        197,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        12,
        206,
        132,
        97,
        12,
        151,
        86,
        91,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        12,
        222,
        129,
        97,
        12,
        69,
        86,
        91,
        146,
        149,
        146,
        148,
        80,
        80,
        80,
        96,
        64,
        145,
        144,
        145,
        1,
        53,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        1,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        11,
        227,
        130,
        97,
        12,
        151,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        13,
        122,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        13,
        98,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        13,
        187,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        95,
        86,
        91,
        127,
        32,
        105,
        115,
        32,
        109,
        105,
        115,
        115,
        105,
        110,
        103,
        32,
        114,
        111,
        108,
        101,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        13,
        248,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        95,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        14,
        35,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        13,
        95,
        86,
        91,
        96,
        31,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        97,
        14,
        217,
        87,
        97,
        14,
        217,
        97,
        13,
        10,
        86,
        91,
        80,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        1,
        144,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        74,
        87,
        83,
        253,
        30,
        24,
        5,
        207,
        178,
        208,
        131,
        71,
        185,
        35,
        64,
        237,
        191,
        140,
        77,
        7,
        112,
        97,
        159,
        48,
        125,
        126,
        82,
        24,
        14,
        42,
        163,
        82,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
        164,
        152,
        7,
        32,
        92,
        228,
        211,
        85,
        9,
        46,
        245,
        168,
        161,
        143,
        86,
        232,
        145,
        60,
        244,
        162,
        1,
        251,
        226,
        135,
        130,
        91,
        9,
        86,
        147,
        194,
        23,
        117,
    ];
    ///The bytecode of the contract.
    pub static VAULT_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        0,
        203,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        162,
        23,
        253,
        223,
        17,
        97,
        0,
        116,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        17,
        97,
        0,
        78,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        2,
        190,
        87,
        128,
        99,
        224,
        32,
        35,
        161,
        20,
        97,
        2,
        222,
        87,
        128,
        99,
        228,
        232,
        12,
        166,
        20,
        97,
        3,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        2,
        118,
        87,
        128,
        99,
        180,
        218,
        0,
        194,
        20,
        97,
        2,
        139,
        87,
        128,
        99,
        183,
        232,
        188,
        153,
        20,
        97,
        2,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        17,
        97,
        0,
        165,
        87,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        1,
        209,
        87,
        128,
        99,
        117,
        178,
        56,
        252,
        20,
        97,
        1,
        241,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        2,
        37,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        60,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        113,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        1,
        175,
        87,
        96,
        0,
        128,
        253,
        91,
        54,
        97,
        1,
        55,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        25,
        96,
        36,
        130,
        1,
        82,
        127,
        77,
        117,
        115,
        116,
        32,
        117,
        115,
        101,
        32,
        100,
        101,
        112,
        111,
        115,
        105,
        116,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        92,
        97,
        1,
        87,
        54,
        96,
        4,
        97,
        11,
        234,
        86,
        91,
        97,
        3,
        63,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        1,
        125,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        97,
        1,
        140,
        54,
        96,
        4,
        97,
        12,
        44,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        104,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        187,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        1,
        202,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        3,
        216,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        221,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        1,
        236,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        4,
        2,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        253,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        127,
        164,
        152,
        7,
        32,
        92,
        228,
        211,
        85,
        9,
        46,
        245,
        168,
        161,
        143,
        86,
        232,
        145,
        60,
        244,
        162,
        1,
        251,
        226,
        135,
        130,
        91,
        9,
        86,
        147,
        194,
        23,
        117,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        49,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        92,
        97,
        2,
        64,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        96,
        0,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        151,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        2,
        166,
        54,
        96,
        4,
        97,
        12,
        176,
        86,
        91,
        97,
        4,
        181,
        86,
        91,
        97,
        1,
        207,
        97,
        2,
        185,
        54,
        96,
        4,
        97,
        12,
        239,
        86,
        91,
        97,
        6,
        136,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        202,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        207,
        97,
        2,
        217,
        54,
        96,
        4,
        97,
        12,
        103,
        86,
        91,
        97,
        6,
        240,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        234,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        127,
        93,
        142,
        18,
        195,
        145,
        66,
        255,
        150,
        215,
        157,
        4,
        209,
        93,
        27,
        161,
        38,
        158,
        79,
        229,
        123,
        185,
        210,
        111,
        67,
        82,
        54,
        40,
        179,
        75,
        161,
        8,
        236,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        161,
        97,
        3,
        45,
        54,
        96,
        4,
        97,
        12,
        239,
        86,
        91,
        96,
        1,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        96,
        0,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        22,
        127,
        121,
        101,
        219,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        20,
        128,
        97,
        3,
        210,
        87,
        80,
        127,
        1,
        255,
        201,
        167,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        22,
        20,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        3,
        243,
        129,
        97,
        7,
        21,
        86,
        91,
        97,
        3,
        253,
        131,
        131,
        97,
        7,
        34,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        51,
        20,
        97,
        4,
        167,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        127,
        32,
        114,
        111,
        108,
        101,
        115,
        32,
        102,
        111,
        114,
        32,
        115,
        101,
        108,
        102,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        1,
        46,
        86,
        91,
        97,
        4,
        177,
        130,
        130,
        97,
        8,
        18,
        86,
        91,
        80,
        80,
        86,
        91,
        127,
        93,
        142,
        18,
        195,
        145,
        66,
        255,
        150,
        215,
        157,
        4,
        209,
        93,
        27,
        161,
        38,
        158,
        79,
        229,
        123,
        185,
        210,
        111,
        67,
        82,
        54,
        40,
        179,
        75,
        161,
        8,
        236,
        97,
        4,
        223,
        129,
        97,
        7,
        21,
        86,
        91,
        129,
        96,
        0,
        3,
        97,
        5,
        25,
        87,
        96,
        64,
        81,
        127,
        31,
        42,
        32,
        5,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        99,
        255,
        255,
        255,
        255,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        130,
        17,
        21,
        97,
        5,
        104,
        87,
        96,
        64,
        81,
        127,
        244,
        214,
        120,
        184,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        99,
        255,
        255,
        255,
        255,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        132,
        146,
        144,
        97,
        5,
        141,
        144,
        132,
        144,
        97,
        13,
        57,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        0,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        144,
        132,
        144,
        131,
        129,
        129,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        5,
        234,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        5,
        239,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        80,
        144,
        80,
        128,
        97,
        6,
        42,
        87,
        96,
        64,
        81,
        127,
        211,
        115,
        144,
        20,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        128,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        99,
        255,
        255,
        255,
        255,
        135,
        22,
        145,
        127,
        100,
        107,
        73,
        58,
        15,
        94,
        225,
        244,
        93,
        81,
        68,
        190,
        106,
        129,
        201,
        26,
        194,
        161,
        249,
        142,
        203,
        255,
        62,
        84,
        137,
        200,
        217,
        164,
        254,
        150,
        232,
        216,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        52,
        146,
        144,
        97,
        6,
        173,
        144,
        132,
        144,
        97,
        13,
        76,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        52,
        129,
        82,
        99,
        255,
        255,
        255,
        255,
        130,
        22,
        144,
        127,
        201,
        101,
        87,
        90,
        0,
        85,
        62,
        9,
        76,
        167,
        197,
        209,
        79,
        2,
        225,
        7,
        194,
        88,
        221,
        160,
        104,
        103,
        203,
        249,
        224,
        230,
        159,
        128,
        231,
        27,
        188,
        193,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        7,
        11,
        129,
        97,
        7,
        21,
        86,
        91,
        97,
        3,
        253,
        131,
        131,
        97,
        8,
        18,
        86,
        91,
        97,
        7,
        31,
        129,
        51,
        97,
        8,
        201,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        97,
        4,
        177,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        7,
        180,
        51,
        144,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        129,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        21,
        97,
        4,
        177,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        97,
        4,
        177,
        87,
        97,
        9,
        7,
        129,
        97,
        9,
        129,
        86,
        91,
        97,
        9,
        18,
        131,
        96,
        32,
        97,
        9,
        160,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        9,
        35,
        146,
        145,
        144,
        97,
        13,
        131,
        86,
        91,
        96,
        64,
        128,
        81,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        97,
        1,
        46,
        145,
        96,
        4,
        1,
        97,
        14,
        4,
        86,
        91,
        96,
        96,
        97,
        3,
        210,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        9,
        175,
        131,
        96,
        2,
        97,
        14,
        85,
        86,
        91,
        97,
        9,
        186,
        144,
        96,
        2,
        97,
        13,
        76,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        9,
        210,
        87,
        97,
        9,
        210,
        97,
        14,
        108,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        9,
        252,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        127,
        48,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        10,
        51,
        87,
        97,
        10,
        51,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        127,
        120,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        10,
        150,
        87,
        97,
        10,
        150,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        10,
        210,
        132,
        96,
        2,
        97,
        14,
        85,
        86,
        91,
        97,
        10,
        221,
        144,
        96,
        1,
        97,
        13,
        76,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        11,
        122,
        87,
        127,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        97,
        98,
        99,
        100,
        101,
        102,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        11,
        30,
        87,
        97,
        11,
        30,
        97,
        14,
        155,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        11,
        52,
        87,
        97,
        11,
        52,
        97,
        14,
        155,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        126,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        11,
        115,
        129,
        97,
        14,
        202,
        86,
        91,
        144,
        80,
        97,
        10,
        224,
        86,
        91,
        80,
        131,
        21,
        97,
        11,
        227,
        87,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        46,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        11,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        127,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        129,
        20,
        97,
        11,
        227,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        62,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        7,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        122,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        140,
        129,
        97,
        12,
        69,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        128,
        53,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        12,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        12,
        197,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        12,
        206,
        132,
        97,
        12,
        151,
        86,
        91,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        12,
        222,
        129,
        97,
        12,
        69,
        86,
        91,
        146,
        149,
        146,
        148,
        80,
        80,
        80,
        96,
        64,
        145,
        144,
        145,
        1,
        53,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        1,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        11,
        227,
        130,
        97,
        12,
        151,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        13,
        122,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        13,
        98,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        13,
        187,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        95,
        86,
        91,
        127,
        32,
        105,
        115,
        32,
        109,
        105,
        115,
        115,
        105,
        110,
        103,
        32,
        114,
        111,
        108,
        101,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        13,
        248,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        95,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        14,
        35,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        13,
        95,
        86,
        91,
        96,
        31,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        3,
        210,
        87,
        97,
        3,
        210,
        97,
        13,
        10,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        97,
        14,
        217,
        87,
        97,
        14,
        217,
        97,
        13,
        10,
        86,
        91,
        80,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        1,
        144,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        74,
        87,
        83,
        253,
        30,
        24,
        5,
        207,
        178,
        208,
        131,
        71,
        185,
        35,
        64,
        237,
        191,
        140,
        77,
        7,
        112,
        97,
        159,
        48,
        125,
        126,
        82,
        24,
        14,
        42,
        163,
        82,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static VAULT_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct Vault<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for Vault<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for Vault<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for Vault<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for Vault<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(Vault)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> Vault<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    VAULT_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                VAULT_ABI.clone(),
                VAULT_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `ADMIN_ROLE` (0x75b238fc) function
        pub fn admin_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([117, 178, 56, 252], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `DEFAULT_ADMIN_ROLE` (0xa217fddf) function
        pub fn default_admin_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([162, 23, 253, 223], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `WITHDRAW_ROLE` (0xe02023a1) function
        pub fn withdraw_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([224, 32, 35, 161], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balances` (0xe4e80ca6) function
        pub fn balances(
            &self,
            sovereign: u32,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([228, 232, 12, 166], sovereign)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deposit` (0xb7e8bc99) function
        pub fn deposit(
            &self,
            sovereign: u32,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([183, 232, 188, 153], sovereign)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleAdmin` (0x248a9ca3) function
        pub fn get_role_admin(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([36, 138, 156, 163], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `grantRole` (0x2f2ff15d) function
        pub fn grant_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([47, 47, 241, 93], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasRole` (0x91d14854) function
        pub fn has_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([145, 209, 72, 84], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceRole` (0x36568abe) function
        pub fn renounce_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([54, 86, 138, 190], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `revokeRole` (0xd547741f) function
        pub fn revoke_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([213, 71, 116, 31], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `supportsInterface` (0x01ffc9a7) function
        pub fn supports_interface(
            &self,
            interface_id: [u8; 4],
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([1, 255, 201, 167], interface_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `withdraw` (0xb4da00c2) function
        pub fn withdraw(
            &self,
            sovereign: u32,
            recipient: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([180, 218, 0, 194], (sovereign, recipient, amount))
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Deposited` event
        pub fn deposited_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            DepositedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RoleAdminChanged` event
        pub fn role_admin_changed_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleAdminChangedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RoleGranted` event
        pub fn role_granted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleGrantedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RoleRevoked` event
        pub fn role_revoked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleRevokedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Withdrawn` event
        pub fn withdrawn_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            WithdrawnFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, VaultEvents> {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for Vault<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `CannotSendFunds` with signature `CannotSendFunds()` and selector `0xd3739014`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "CannotSendFunds", abi = "CannotSendFunds()")]
    pub struct CannotSendFunds;
    ///Custom Error type `InsufficientBalance` with signature `InsufficientBalance()` and selector `0xf4d678b8`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InsufficientBalance", abi = "InsufficientBalance()")]
    pub struct InsufficientBalance;
    ///Custom Error type `ZeroAmount` with signature `ZeroAmount()` and selector `0x1f2a2005`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "ZeroAmount", abi = "ZeroAmount()")]
    pub struct ZeroAmount;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum VaultErrors {
        CannotSendFunds(CannotSendFunds),
        InsufficientBalance(InsufficientBalance),
        ZeroAmount(ZeroAmount),
    }
    impl ::ethers::core::abi::AbiDecode for VaultErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <CannotSendFunds as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CannotSendFunds(decoded));
            }
            if let Ok(decoded)
                = <InsufficientBalance as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InsufficientBalance(decoded));
            }
            if let Ok(decoded)
                = <ZeroAmount as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ZeroAmount(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for VaultErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::CannotSendFunds(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InsufficientBalance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ZeroAmount(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for VaultErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::CannotSendFunds(element) => ::core::fmt::Display::fmt(element, f),
                Self::InsufficientBalance(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ZeroAmount(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<CannotSendFunds> for VaultErrors {
        fn from(value: CannotSendFunds) -> Self {
            Self::CannotSendFunds(value)
        }
    }
    impl ::core::convert::From<InsufficientBalance> for VaultErrors {
        fn from(value: InsufficientBalance) -> Self {
            Self::InsufficientBalance(value)
        }
    }
    impl ::core::convert::From<ZeroAmount> for VaultErrors {
        fn from(value: ZeroAmount) -> Self {
            Self::ZeroAmount(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Deposited", abi = "Deposited(uint32,uint256)")]
    pub struct DepositedFilter {
        #[ethevent(indexed)]
        pub sovereign: u32,
        pub amount: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "RoleAdminChanged",
        abi = "RoleAdminChanged(bytes32,bytes32,bytes32)"
    )]
    pub struct RoleAdminChangedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub previous_admin_role: [u8; 32],
        #[ethevent(indexed)]
        pub new_admin_role: [u8; 32],
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RoleGranted", abi = "RoleGranted(bytes32,address,address)")]
    pub struct RoleGrantedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RoleRevoked", abi = "RoleRevoked(bytes32,address,address)")]
    pub struct RoleRevokedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Withdrawn", abi = "Withdrawn(uint32,address,uint256)")]
    pub struct WithdrawnFilter {
        #[ethevent(indexed)]
        pub sovereign: u32,
        pub recipient: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum VaultEvents {
        DepositedFilter(DepositedFilter),
        RoleAdminChangedFilter(RoleAdminChangedFilter),
        RoleGrantedFilter(RoleGrantedFilter),
        RoleRevokedFilter(RoleRevokedFilter),
        WithdrawnFilter(WithdrawnFilter),
    }
    impl ::ethers::contract::EthLogDecode for VaultEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = DepositedFilter::decode_log(log) {
                return Ok(VaultEvents::DepositedFilter(decoded));
            }
            if let Ok(decoded) = RoleAdminChangedFilter::decode_log(log) {
                return Ok(VaultEvents::RoleAdminChangedFilter(decoded));
            }
            if let Ok(decoded) = RoleGrantedFilter::decode_log(log) {
                return Ok(VaultEvents::RoleGrantedFilter(decoded));
            }
            if let Ok(decoded) = RoleRevokedFilter::decode_log(log) {
                return Ok(VaultEvents::RoleRevokedFilter(decoded));
            }
            if let Ok(decoded) = WithdrawnFilter::decode_log(log) {
                return Ok(VaultEvents::WithdrawnFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for VaultEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DepositedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleAdminChangedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RoleGrantedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleRevokedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::WithdrawnFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DepositedFilter> for VaultEvents {
        fn from(value: DepositedFilter) -> Self {
            Self::DepositedFilter(value)
        }
    }
    impl ::core::convert::From<RoleAdminChangedFilter> for VaultEvents {
        fn from(value: RoleAdminChangedFilter) -> Self {
            Self::RoleAdminChangedFilter(value)
        }
    }
    impl ::core::convert::From<RoleGrantedFilter> for VaultEvents {
        fn from(value: RoleGrantedFilter) -> Self {
            Self::RoleGrantedFilter(value)
        }
    }
    impl ::core::convert::From<RoleRevokedFilter> for VaultEvents {
        fn from(value: RoleRevokedFilter) -> Self {
            Self::RoleRevokedFilter(value)
        }
    }
    impl ::core::convert::From<WithdrawnFilter> for VaultEvents {
        fn from(value: WithdrawnFilter) -> Self {
            Self::WithdrawnFilter(value)
        }
    }
    ///Container type for all input parameters for the `ADMIN_ROLE` function with signature `ADMIN_ROLE()` and selector `0x75b238fc`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "ADMIN_ROLE", abi = "ADMIN_ROLE()")]
    pub struct AdminRoleCall;
    ///Container type for all input parameters for the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "DEFAULT_ADMIN_ROLE", abi = "DEFAULT_ADMIN_ROLE()")]
    pub struct DefaultAdminRoleCall;
    ///Container type for all input parameters for the `WITHDRAW_ROLE` function with signature `WITHDRAW_ROLE()` and selector `0xe02023a1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "WITHDRAW_ROLE", abi = "WITHDRAW_ROLE()")]
    pub struct WithdrawRoleCall;
    ///Container type for all input parameters for the `balances` function with signature `balances(uint32)` and selector `0xe4e80ca6`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "balances", abi = "balances(uint32)")]
    pub struct BalancesCall {
        pub sovereign: u32,
    }
    ///Container type for all input parameters for the `deposit` function with signature `deposit(uint32)` and selector `0xb7e8bc99`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "deposit", abi = "deposit(uint32)")]
    pub struct DepositCall {
        pub sovereign: u32,
    }
    ///Container type for all input parameters for the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getRoleAdmin", abi = "getRoleAdmin(bytes32)")]
    pub struct GetRoleAdminCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `grantRole` function with signature `grantRole(bytes32,address)` and selector `0x2f2ff15d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "grantRole", abi = "grantRole(bytes32,address)")]
    pub struct GrantRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "hasRole", abi = "hasRole(bytes32,address)")]
    pub struct HasRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `renounceRole` function with signature `renounceRole(bytes32,address)` and selector `0x36568abe`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "renounceRole", abi = "renounceRole(bytes32,address)")]
    pub struct RenounceRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `revokeRole` function with signature `revokeRole(bytes32,address)` and selector `0xd547741f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "revokeRole", abi = "revokeRole(bytes32,address)")]
    pub struct RevokeRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "supportsInterface", abi = "supportsInterface(bytes4)")]
    pub struct SupportsInterfaceCall {
        pub interface_id: [u8; 4],
    }
    ///Container type for all input parameters for the `withdraw` function with signature `withdraw(uint32,address,uint256)` and selector `0xb4da00c2`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "withdraw", abi = "withdraw(uint32,address,uint256)")]
    pub struct WithdrawCall {
        pub sovereign: u32,
        pub recipient: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum VaultCalls {
        AdminRole(AdminRoleCall),
        DefaultAdminRole(DefaultAdminRoleCall),
        WithdrawRole(WithdrawRoleCall),
        Balances(BalancesCall),
        Deposit(DepositCall),
        GetRoleAdmin(GetRoleAdminCall),
        GrantRole(GrantRoleCall),
        HasRole(HasRoleCall),
        RenounceRole(RenounceRoleCall),
        RevokeRole(RevokeRoleCall),
        SupportsInterface(SupportsInterfaceCall),
        Withdraw(WithdrawCall),
    }
    impl ::ethers::core::abi::AbiDecode for VaultCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <AdminRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AdminRole(decoded));
            }
            if let Ok(decoded)
                = <DefaultAdminRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::DefaultAdminRole(decoded));
            }
            if let Ok(decoded)
                = <WithdrawRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::WithdrawRole(decoded));
            }
            if let Ok(decoded)
                = <BalancesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Balances(decoded));
            }
            if let Ok(decoded)
                = <DepositCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Deposit(decoded));
            }
            if let Ok(decoded)
                = <GetRoleAdminCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleAdmin(decoded));
            }
            if let Ok(decoded)
                = <GrantRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GrantRole(decoded));
            }
            if let Ok(decoded)
                = <HasRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HasRole(decoded));
            }
            if let Ok(decoded)
                = <RenounceRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RenounceRole(decoded));
            }
            if let Ok(decoded)
                = <RevokeRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RevokeRole(decoded));
            }
            if let Ok(decoded)
                = <SupportsInterfaceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SupportsInterface(decoded));
            }
            if let Ok(decoded)
                = <WithdrawCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Withdraw(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for VaultCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::AdminRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::DefaultAdminRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::WithdrawRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Balances(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Deposit(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetRoleAdmin(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GrantRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::HasRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RenounceRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevokeRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SupportsInterface(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Withdraw(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for VaultCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AdminRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::DefaultAdminRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::WithdrawRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::Balances(element) => ::core::fmt::Display::fmt(element, f),
                Self::Deposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleAdmin(element) => ::core::fmt::Display::fmt(element, f),
                Self::GrantRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::HasRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::RenounceRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevokeRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::SupportsInterface(element) => ::core::fmt::Display::fmt(element, f),
                Self::Withdraw(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<AdminRoleCall> for VaultCalls {
        fn from(value: AdminRoleCall) -> Self {
            Self::AdminRole(value)
        }
    }
    impl ::core::convert::From<DefaultAdminRoleCall> for VaultCalls {
        fn from(value: DefaultAdminRoleCall) -> Self {
            Self::DefaultAdminRole(value)
        }
    }
    impl ::core::convert::From<WithdrawRoleCall> for VaultCalls {
        fn from(value: WithdrawRoleCall) -> Self {
            Self::WithdrawRole(value)
        }
    }
    impl ::core::convert::From<BalancesCall> for VaultCalls {
        fn from(value: BalancesCall) -> Self {
            Self::Balances(value)
        }
    }
    impl ::core::convert::From<DepositCall> for VaultCalls {
        fn from(value: DepositCall) -> Self {
            Self::Deposit(value)
        }
    }
    impl ::core::convert::From<GetRoleAdminCall> for VaultCalls {
        fn from(value: GetRoleAdminCall) -> Self {
            Self::GetRoleAdmin(value)
        }
    }
    impl ::core::convert::From<GrantRoleCall> for VaultCalls {
        fn from(value: GrantRoleCall) -> Self {
            Self::GrantRole(value)
        }
    }
    impl ::core::convert::From<HasRoleCall> for VaultCalls {
        fn from(value: HasRoleCall) -> Self {
            Self::HasRole(value)
        }
    }
    impl ::core::convert::From<RenounceRoleCall> for VaultCalls {
        fn from(value: RenounceRoleCall) -> Self {
            Self::RenounceRole(value)
        }
    }
    impl ::core::convert::From<RevokeRoleCall> for VaultCalls {
        fn from(value: RevokeRoleCall) -> Self {
            Self::RevokeRole(value)
        }
    }
    impl ::core::convert::From<SupportsInterfaceCall> for VaultCalls {
        fn from(value: SupportsInterfaceCall) -> Self {
            Self::SupportsInterface(value)
        }
    }
    impl ::core::convert::From<WithdrawCall> for VaultCalls {
        fn from(value: WithdrawCall) -> Self {
            Self::Withdraw(value)
        }
    }
    ///Container type for all return fields from the `ADMIN_ROLE` function with signature `ADMIN_ROLE()` and selector `0x75b238fc`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AdminRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DefaultAdminRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `WITHDRAW_ROLE` function with signature `WITHDRAW_ROLE()` and selector `0xe02023a1`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct WithdrawRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `balances` function with signature `balances(uint32)` and selector `0xe4e80ca6`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BalancesReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetRoleAdminReturn(pub [u8; 32]);
    ///Container type for all return fields from the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct HasRoleReturn(pub bool);
    ///Container type for all return fields from the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SupportsInterfaceReturn(pub bool);
}
